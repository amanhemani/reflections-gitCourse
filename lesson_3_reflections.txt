When would you want to use a remote repository rather than keeping all your work local?

when collaborating with others
When using multiple machines
When sharing your work
When you would like to have a back up of all commits online






Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

To allow you to work on a feature without worry of things changing in the middle
You have more of an idea of the code you are working with, no chance it changed without you knowing






Describe the differences between forks, clones, and branches. When would you use one instead of another?

branches is when you want to create a separate path of commits
so that the project can be worked on in two different features on different paths
to potentially merge later
Clones are when you copy a repo to a local computer, such as your GitHub repo to a new machine
or an existing local repo to a new location on your computer
Fork is when you copy one GitHub repo to another GitHub account
for you to make your own version of some public code







What is the benefit of having a copy of the last known state of the remote stored locally?

If pushing or pulling, you can use it as a reference for merging the local state and the state on GitHub






How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Google docs. Auto update, better latency, simultaneous work with real time updates
No named commits, no experimental versions, no always working master version







When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When you are not sure if the code will work
Testing new features
Not all collabortors on board with changes yet
A benefit to updating master would be a cleaner tree
A benefit of using a new branch would be ensuring that master is production level quality
