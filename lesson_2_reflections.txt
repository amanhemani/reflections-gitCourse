What happens when you initialize a repository? Why do you need to do it?

It creates a .git directory in the folder to hold metadata for the content in the folder
You need to do it to allow all the git functionality to your folder





How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is the intermediate between the working directory and the repository
When committing, the repo bundles the staging area and commits that
It allows you to commit only certain files rather than all






How can you use the staging area to make sure you have one commit per logical change?

use diff --staged to compare the most recent commit and whats in your stage
this way you can compare the changed lines between the two






What are some situations when branches would be helpful in keeping your history organized? How would branches help?

when adding experimental features or want to isolate some Changes
branches allow you to go off into different paths of editing without affecting your master or other branches






How do the diagrams help you visualize the branch structure?

You can see parents, who you can access, who you can't access
How to get to any commit
See visually the creation of all of your features
Keep the whole project organized
Make sure no important commit get lost







What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

the code of the two merges
New lines added by a file are added to merged files
Lines removed by a file are not present in the merged files
The two branches come together and share a new node.
The new node has 2 parents, one for each branch
